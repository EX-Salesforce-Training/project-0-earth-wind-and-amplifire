@isTest
public class AccountTrigger2Test {
    
    private static Set<Id> deletedIds = new Set<Id>();
    private static integer numAccounts = 10;
    
    @testSetup
    public static void setup() {
        List<Account> accounts = new List<Account>();
        for (integer i = 0; i < numAccounts; i++) {
            Account a = new Account();
            a.name = 'account' + i;
            accounts.add(a);
        }
        insert accounts;
        for (Account a : accounts) {
            system.assertnotequals(a.Id, null);
            deletedIds.add(a.Id);
            system.debug('added an id');
        }
        delete accounts;
        system.debug('Deleted ids at end of setup: ' + deletedIds);
    }
    
    @isTest
    public static void singleUndelete() {
        List<Account> savedAccts = [SELECT Id, Name FROM Account WHERE Name = 'account0' ALL ROWS];
        undelete savedAccts;
        List<Task> newTasks = [SELECT whatId FROM Task WHERE whatId IN :deletedIds];
        for (Task t : newTasks) {
            system.assertEquals(t.whatId, savedAccts[0].Id);
        }
    }
    
    @isTest
    public static void bulkUndelete() {
        List<Account> savedAccts = [SELECT Id, Name FROM Account WHERE Name LIKE 'account_' ALL ROWS];
        undelete savedAccts;
        Set<Id> acctIds = new Set<Id>();
        for (Account a : savedAccts) {
            acctIds.add(a.id);
        }
        system.debug('deleted Ids: ' + deletedIds);
        List<Task> newTasks = [SELECT whatId FROM Task WHERE whatId IN :acctIds];
        Set<Id> whatIds = new Set<Id>();
        for (Task t : newTasks) {
            whatIds.add(t.whatId);
        }
        system.debug('whatIds: ' + whatIds);
        for (Account a : savedAccts) {
            system.debug('Account id: ' + a.Id);
            system.assert(whatIds.contains(a.Id));
        }
    }

}